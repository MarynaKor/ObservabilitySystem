services:
  
  postgres:
    container_name: my_database
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=projects'
      - 'POSTGRES_USER=project'
      - 'POSTGRES_PASSWORD=secret'
    ports:
      - '5432:5432'
    volumes:
      - './Project/src/main/resources/data.sql:/docker-entrypoint-initdb.d/data.sql'
    restart: 'always'


  backend:
    build: ./Project/
    container_name: backend
    ports:
      - '8081:8081'
    environment:
      db-url: 'jdbc:postgresql://postgres:5432/projects'
      db-username: 'project'
      db-password: 'secret'
    depends_on:
      - 'postgres'

  counter:
    build: ./Counter-Service/
    container_name: counter
    #environment:
      #OTEL_EXPORTER_OTLP_ENDPOINT: 'http://otel-collector:4318' es it schon in der application properties
    ports:
      - '8082:8082'
    depends_on:
        - backend
        - otel-collector


  otel-collector:
      image: otel/opentelemetry-collector-contrib:0.121.0
      volumes:
        - ./Counter-Service/collector-spring-native-config.yaml:/etc/otel/config.yaml
      command: [ '--config=/etc/otel/config.yaml' ]
      expose:
        - '4317'
      ports:
        - '4317:4317' #grpc
        - '4318:4318' #http
        - '8888:8888'
        - '8889:8889'
      depends_on:
        - loki


  prometheus:
    image: prom/prometheus:v2.45.3
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./Counter-Service/prometheus:/etc/prometheus
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml

  alertmanager:
      image: prom/alertmanager:latest
      ports:
        - '9093:9093'
      volumes:
        - ./Counter-Service/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      #restart: always

  loki:
    image: grafana/loki:main
    ports:
      - "3100:3100"
    volumes:
      - ./Counter-Service/loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./Counter-Service/grafana:/etc/grafana/provisioning/datasources
      - grafana-storage:/var/lib/grafana
  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./Counter-Service/tempo.yaml:/etc/tempo.yaml
    expose:
      - '4317'
    ports:
      - '3200:3200'
      - '4317'  # otlp grpc
      - '4318'  # otlp http
  #alloy:
  #  image: grafana/alloy:latest
  #  ports:
  #    - 12345:12345
  #  volumes:
  #    - ./Counter-Service/alloy-config.alloy:/etc/alloy/config.alloy
  #    - ./log:/tmp/app-logs/
  #  command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
  #  depends_on:
  #    - loki

volumes:
  grafana-storage:
    external: true
