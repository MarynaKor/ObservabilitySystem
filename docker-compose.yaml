services:
  
  postgres:
    container_name: postgres
    build:
      context: .
      dockerfile: ./Project/Dockerfile-postgres
    environment:
      - 'POSTGRES_DB=projects'
      - 'POSTGRES_USER=project'
      - 'POSTGRES_PASSWORD=secret'
    ports:
      - '5432:5432'
    restart: 'always'


  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./Project/Dockerfile
    ports:
      - '8081:8081'
    depends_on:
      - 'postgres'
    volumes:
      - ./log:/log

  counter:
    build:
      context: .
      dockerfile: ./Counter-Service/Dockerfile
    container_name: counter
    ports:
      - '8082:8082'
    volumes:
      - ./log:/log
    depends_on:
      - 'backend'


#  alloy:
#    image: grafana/alloy:latest
#    ports:
#      - 12345:12345
#    volumes:
#      - ./Counter-Service/alloy-config.alloy:/etc/alloy/config.alloy
#      - ./log:/tmp/app-logs/
#    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
#    depends_on:
#      - loki

  prometheus:
    image: prom/prometheus:v2.45.3
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./Counter-Service/prometheus:/etc/prometheus
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml

  alertmanager:
      image: prom/alertmanager:latest
      ports:
        - '9093:9093'
      volumes:
        - ./Counter-Service/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      restart: always
#
#  loki:
#    image: grafana/loki:main
#    ports:
#      - "3100:3100"
#    volumes:
#      - ./Counter-Service/loki-config.yaml:/etc/loki/local-config.yaml
#    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./Counter-Service/grafana:Lio
      - grafana-storage:/var/lib/grafana

volumes:
  grafana-storage:
    external: true
